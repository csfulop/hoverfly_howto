plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'hu.fcs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

repositories {
    mavenCentral()
}

// componentTest config is based on: https://docs.gradle.org/5.0/userguide/java_testing.html#sec:configuring_java_integration_tests
sourceSets {
    componentTest {
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}

configurations {
    componentTestImplementation.extendsFrom testImplementation
    componentTestRuntimeOnly.extendsFrom testRuntimeOnly
}

apply plugin: 'idea'
idea {
    module {
        testSourceDirs += project.sourceSets.componentTest.java.srcDirs
        testSourceDirs += project.sourceSets.componentTest.resources.srcDirs
    }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    componentTestImplementation 'org.testcontainers:junit-jupiter:1.16.0'
    componentTestImplementation "io.specto:hoverfly-java-junit5:0.14.1"
}

test {
    useJUnitPlatform()
}

task componentTest(type: Test) {
    description = 'Runs component tests.'
    group = 'verification'

    useJUnitPlatform()
    testClassesDirs = sourceSets.componentTest.output.classesDirs
    classpath = sourceSets.componentTest.runtimeClasspath
    shouldRunAfter test
}
check.dependsOn componentTest
